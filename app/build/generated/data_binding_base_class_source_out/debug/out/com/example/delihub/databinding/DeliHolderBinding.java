// Generated by view binder compiler. Do not edit!
package com.example.delihub.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.delihub.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DeliHolderBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView Orderbtn;

  @NonNull
  public final CardView deliBackground;

  @NonNull
  public final ImageView deliImg;

  @NonNull
  public final TextView deliveryTitle;

  @NonNull
  public final LinearLayout llBackground;

  @NonNull
  public final RatingBar rating;

  @NonNull
  public final TextView txtPrice;

  private DeliHolderBinding(@NonNull CardView rootView, @NonNull TextView Orderbtn,
      @NonNull CardView deliBackground, @NonNull ImageView deliImg, @NonNull TextView deliveryTitle,
      @NonNull LinearLayout llBackground, @NonNull RatingBar rating, @NonNull TextView txtPrice) {
    this.rootView = rootView;
    this.Orderbtn = Orderbtn;
    this.deliBackground = deliBackground;
    this.deliImg = deliImg;
    this.deliveryTitle = deliveryTitle;
    this.llBackground = llBackground;
    this.rating = rating;
    this.txtPrice = txtPrice;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DeliHolderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DeliHolderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.deli_holder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DeliHolderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Orderbtn;
      TextView Orderbtn = ViewBindings.findChildViewById(rootView, id);
      if (Orderbtn == null) {
        break missingId;
      }

      CardView deliBackground = (CardView) rootView;

      id = R.id.deli_img;
      ImageView deliImg = ViewBindings.findChildViewById(rootView, id);
      if (deliImg == null) {
        break missingId;
      }

      id = R.id.delivery_title;
      TextView deliveryTitle = ViewBindings.findChildViewById(rootView, id);
      if (deliveryTitle == null) {
        break missingId;
      }

      id = R.id.ll_background;
      LinearLayout llBackground = ViewBindings.findChildViewById(rootView, id);
      if (llBackground == null) {
        break missingId;
      }

      id = R.id.rating;
      RatingBar rating = ViewBindings.findChildViewById(rootView, id);
      if (rating == null) {
        break missingId;
      }

      id = R.id.txt_price;
      TextView txtPrice = ViewBindings.findChildViewById(rootView, id);
      if (txtPrice == null) {
        break missingId;
      }

      return new DeliHolderBinding((CardView) rootView, Orderbtn, deliBackground, deliImg,
          deliveryTitle, llBackground, rating, txtPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
